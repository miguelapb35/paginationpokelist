{"version":3,"sources":["PokemonList.js","Pagination.js","App.js","index.js"],"names":["PokemonList","pokemon","map","p","key","Pagination","gotoNextPage","gotoPrevPage","onClick","App","useState","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","res","data","next","previous","results","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAEe,SAASA,EAAT,GAAiC,IAAXC,EAAU,EAAVA,QACnC,OACE,6BACGA,EAAQC,KAAI,SAAAC,GAAC,OACZ,yBAAKC,IAAKD,GAAV,IAAeA,EAAf,S,oBCJO,SAASE,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,aAChD,OACE,6BACGA,GAAgB,4BAAQC,QAASD,GAAjB,YAChBD,GAAgB,4BAAQE,QAASF,GAAjB,SCuCRG,MAxCf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNT,EADM,KACGU,EADH,OAE+BD,mBAAS,qCAFxC,mBAENE,EAFM,KAEUC,EAFV,OAGyBH,qBAHzB,mBAGNI,EAHM,KAGOC,EAHP,OAIyBL,qBAJzB,mBAINM,EAJM,KAIOC,EAJP,OAKiBP,oBAAS,GAL1B,mBAKNQ,EALM,KAKGC,EALH,KA4Bb,OArBAC,qBAAU,WAER,IAAIC,EASJ,OAVAF,GAAW,GAEXG,IAAMC,IAAIX,EAAgB,CACxBY,YAAa,IAAIF,IAAMG,aAAY,SAAAC,GAAC,OAAIL,EAASK,OAChDC,MAAK,SAAAC,GACNT,GAAW,GACXJ,EAAea,EAAIC,KAAKC,MACxBb,EAAeW,EAAIC,KAAKE,UACxBpB,EAAWiB,EAAIC,KAAKG,QAAQ9B,KAAI,SAAAC,GAAC,OAAIA,EAAE8B,YAElC,kBAAMZ,OACZ,CAACT,IASDM,EAAgB,aAEjB,oCACE,kBAAClB,EAAD,CAAaC,QAASA,IACtB,kBAACI,EAAD,CACEC,aAAcQ,EAZpB,WACED,EAAkBC,IAW6B,KAC3CP,aAAcS,EAVpB,WACEH,EAAkBG,IAS6B,SClCnDkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e7cf742d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function PokemonList({pokemon}) {\r\n  return (\r\n    <div>\r\n      {pokemon.map(p => (\r\n        <div key={p}> {p} </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Pagination({gotoNextPage, gotoPrevPage}) {\r\n  return (\r\n    <div>\r\n      {gotoPrevPage && <button onClick={gotoPrevPage}>Previous</button>}\r\n      {gotoNextPage && <button onClick={gotoNextPage}>Next</button>}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect} from 'react';\nimport PokemonList from './PokemonList';\nimport axios from 'axios';\nimport Pagination from './Pagination';\n\nfunction App() {\n  const [pokemon, setPokemon] = useState([])\n  const [currentPageUrl, setCurrentPageUrl] = useState('https://pokeapi.co/api/v2/pokemon')\n  const [nextPageUrl, setNextPageUrl] = useState()\n  const [prevPageUrl, setPrevPageUrl] = useState()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setLoading(true)\n    let cancel\n    axios.get(currentPageUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false)\n      setNextPageUrl(res.data.next)\n      setPrevPageUrl(res.data.previous)\n      setPokemon(res.data.results.map(p => p.name)) \n    })\n    return () => cancel()\n  }, [currentPageUrl])\n\n  function gotoNextPage() {\n    setCurrentPageUrl(nextPageUrl)\n  }\n  function gotoPrevPage() {\n    setCurrentPageUrl(prevPageUrl)\n  }\n\n  if(loading) return 'Loading...'\n  return (\n    <>\n      <PokemonList pokemon={pokemon} />\n      <Pagination\n        gotoNextPage={nextPageUrl ? gotoNextPage : null}\n        gotoPrevPage={prevPageUrl ? gotoPrevPage : null}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}